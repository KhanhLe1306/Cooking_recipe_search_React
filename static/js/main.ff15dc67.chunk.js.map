{"version":3,"sources":["Recipe.js","Logo.js","App.js","reportWebVitals.js","index.js"],"names":["Recipe","label","calories","image","ingredients","className","map","ingredient","text","toFixed","src","alt","Logo","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","console","log","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","recipe","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAqBeA,MAnBf,YAA0D,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,YACtC,OACI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,cAAf,UACI,6BAAKJ,IACL,6BACCG,EAAYE,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,eAIxB,mCAAMN,EAASO,QAAQ,GAAvB,eACA,qBAAKJ,UAAU,QAAf,SACI,qBAAKK,IAAKP,EAAOQ,IAAI,W,QCLtBC,MARf,WACI,OACI,qBAAKP,UAAU,OAAf,SACI,qBAAKK,IAAI,8FAA8FC,IAAI,Q,MC+CxGE,MA9Cf,WAEE,IAGA,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,WAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,MACC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXd,mCAWc,wDADX,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAChBC,QAAQC,IAAIH,GAJK,2CAAH,qDAiBhB,OACE,sBAAKtB,UAAU,MAAf,UACE,uBAAM0B,SARU,SAAAC,GAClBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KAKqBb,UAAU,cAAvC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,YAAY,SAASC,MAAOnB,EAAQoB,SAb/D,SAAAL,GACnBd,EAAUc,EAAEM,OAAOF,UAaf,wBAAQ/B,UAAU,gBAAgB6B,KAAK,SAAvC,4BAEF,qBAAK7B,UAAU,UAAf,SACGU,EAAQT,KAAI,SAAAiC,GAAM,OACjB,cAAC,EAAD,CAAuBtC,MAAOsC,EAAOA,OAAOtC,MAAOC,SAAUqC,EAAOA,OAAOrC,SAAUC,MAAOoC,EAAOA,OAAOpC,MAAOC,YAAamC,EAAOA,OAAOnC,aAA/HoC,oBAGjB,cAAC,EAAD,QCnCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ff15dc67.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Recipe({ label, calories, image, ingredients }) {\r\n    return (\r\n        <div className=\"recipe\">\r\n            <div className=\"recipe_info\">\r\n                <h1>{label}</h1>\r\n                <ul>\r\n                {ingredients.map(ingredient => (\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n                </ul>\r\n            </div>\r\n            <h2> {calories.toFixed(0)} calories</h2>\r\n            <div className=\"image\">\r\n                <img src={image} alt=\"\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Recipe\r\n","import React from 'react'\r\n\r\nfunction Logo() {\r\n    return (\r\n        <div className=\"logo\">\r\n            <img src=\"https://www.pngfind.com/pngs/m/685-6854970_react-logo-png-png-download-logo-png-reactjs.png\" alt=\"\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState, useEffect } from 'react'\r\nimport Recipe from './Recipe'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Logo from './Logo'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  const APP_ID = \"4af35fcb\"\r\n  const APP_KEY = \"fcbd26cb4361dafaea1cbe7d8cd98707\"\r\n\r\n  const [recipes, setRecipes] = useState([])\r\n  const [search, setSearch] = useState('')\r\n  const [query, setQuery] = useState('chicken')\r\n\r\n  useEffect(() => {\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  const getRecipes = async () => {\r\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=0&to=25&calories=591-1500&health=alcohol-free`)\r\n    const data = await response.json()\r\n    setRecipes(data.hits)\r\n    console.log(data)\r\n  }\r\n\r\n  const updateSearch = e => {\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const updateQuery = e => {\r\n    e.preventDefault();\r\n    setQuery(search)\r\n    setSearch('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <form onSubmit={updateQuery} className=\"search-form\">\r\n        <input className=\"search-bar\" type=\"text\" placeholder=\"Search\" value={search} onChange={updateSearch} />\r\n        <button className=\"search-button\" type=\"submit\">Get recipes</button>\r\n      </form>\r\n      <div className=\"recipes\">\r\n        {recipes.map(recipe => (\r\n          <Recipe key={uuidv4()} label={recipe.recipe.label} calories={recipe.recipe.calories} image={recipe.recipe.image} ingredients={recipe.recipe.ingredients} />\r\n        ))}\r\n      </div>\r\n      <Logo />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}